name: "ðŸ“ˆ Replay Bench"

on:
  workflow_dispatch:
    inputs:
      run_token:
        description: 'Authorization token for maintainers'
        required: false

permissions:
  contents: write

jobs:
  replay-bench:
    runs-on: ubuntu-latest
    steps:
      - name: Check dispatch token
        if: github.actor != github.repository_owner
        run: |
          if [ "${{ github.event.inputs.run_token }}" != "${{ secrets.DISPATCH_TOKEN }}" ]; then
            echo "Unauthorized"
            exit 1
          fi
      - uses: actions/checkout@v4.1.5 # 44c2b7a8a4ea60a981eaca3cf939b5f4305c123b
      - uses: actions/setup-python@v5.6.0 # a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: '3.11'
          cache: pip
          cache-dependency-path: 'requirements.lock'

      - name: Cache pre-commit
        uses: actions/cache@v4.2.3 # 5a3ec84eff668545956fd18022155c47e93e2684
        with:
          path: .cache/pre-commit
          key: ${{ runner.os }}-precommit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-precommit-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.lock
          pip install -r requirements-dev.txt
      - name: Install pre-commit
        run: pip install pre-commit==4.2.0
        env:
          PRE_COMMIT_HOME: .cache/pre-commit
      - name: Run pre-commit checks
        run: pre-commit run --all-files
        env:
          PRE_COMMIT_HOME: .cache/pre-commit
      - name: Run replay harness
        run: python scripts/run_replay_bench.py
      - name: Run micro benchmarks
        run: |
          make benchmark
      - name: Upload micro benchmark results
        uses: actions/upload-artifact@v4.6.2 # ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: micro-bench-results
          path: bench_results.json
      - name: Commit results
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add docs/bench_history.csv
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore: update bench history"
            git push
          fi
