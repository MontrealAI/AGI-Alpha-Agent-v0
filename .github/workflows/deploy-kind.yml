name: "ðŸš€ Deploy â€” Kind"

on:
  workflow_dispatch:
    inputs:
      run_token:
        description: 'Authorization token for maintainers'
        required: false

permissions:
  contents: read

jobs:
  deploy-kind:
    runs-on: ubuntu-latest
    steps:
      - name: Check dispatch token
        if: github.actor != github.repository_owner
        run: |
          if [ "${{ github.event.inputs.run_token }}" != "${{ secrets.DISPATCH_TOKEN }}" ]; then
            echo "Unauthorized"
            exit 1
          fi
      - name: Checkout repository
        uses: actions/checkout@v4.2.2 # 11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Set up Python
        uses: actions/setup-python@v5.6.0 # a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'requirements.lock'

      - name: Cache pre-commit
        uses: actions/cache@v4.2.3 # 5a3ec84eff668545956fd18022155c47e93e2684
        with:
          path: .cache/pre-commit
          key: ${{ runner.os }}-precommit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-precommit-

      - name: Install pre-commit
        run: pip install pre-commit==4.2.0
        env:
          PRE_COMMIT_HOME: .cache/pre-commit
      - name: Run pre-commit checks
        run: pre-commit run --all-files
        env:
          PRE_COMMIT_HOME: .cache/pre-commit

      - name: Set up Kind cluster
        uses: helm/kind-action@v1.12.0 # a1b0e391336a6ee6713a0583f8c6240d70863de3

      - name: Build Insight demo image
        run: |
          docker build -t insight-demo:local infrastructure

      - name: Load image into Kind
        run: kind load docker-image insight-demo:local

      - name: Deploy Helm chart
        run: |
          helm install insight infrastructure/helm-chart --values infrastructure/helm-chart/values.yaml

      - name: Apply Terraform
        working-directory: infrastructure/terraform
        run: |
          terraform init -backend=false
          terraform apply -auto-approve

      - name: Wait for service readiness
        run: |
          kubectl wait --for=condition=Ready pods --all --timeout=120s
          kubectl get pods
