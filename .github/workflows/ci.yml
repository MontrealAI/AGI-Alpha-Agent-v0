# üåê Alpha-AGI Insight CI ‚Äî GitHub Actions Workflow
#
# Validates the demo with lint, type checks, unit tests and Docker build.
# Runs **solely** when triggered via the GitHub UI or CLI
# (workflow_dispatch). No automatic execution on push or pull-request.
#
name: "üöÄ CI ‚Äî Insight Demo"

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: "Type RUN to start the CI pipeline"
        required: true
        default: ""
        type: string

permissions:
  contents: read
  actions: read
  checks:  write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION_MATRIX: "3.11,3.12"
  DOCKER_IMAGE: agi-insight-demo

jobs:
  lint-type:
    name: "üßπ Ruff + üè∑Ô∏è Mypy"
    if: ${{ github.event.inputs.confirm == 'RUN' }}
    runs-on: ubuntu-latest
    environment: ci-on-demand        # ‚á¶ optional: add reviewers in repo Settings ‚Üí Environments
    strategy:
      matrix:
        python-version: [${{ env.PYTHON_VERSION_MATRIX }}]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Install lint tools
        run: |
          python -m pip install --upgrade pip
          pip install ruff mypy
      - name: Ruff lint
        run: ruff alpha_factory_v1/demos/alpha_agi_insight_v1
      - name: Mypy type-check
        run: mypy alpha_factory_v1/demos/alpha_agi_insight_v1 --strict

  tests:
    name: "‚úÖ Pytest"
    if: ${{ github.event.inputs.confirm == 'RUN' }}
    needs: lint-type
    runs-on: ubuntu-latest
    environment: ci-on-demand
    strategy:
      matrix:
        python-version: [${{ env.PYTHON_VERSION_MATRIX }}]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.lock
          pip install pytest pytest-cov pytest-benchmark
      - name: Run tests with coverage
        run: |
          pytest --cov --cov-report=xml --cov-fail-under=60
      - name: Run benchmark
        run: |
          pytest tests/test_benchmark.py -q
          cat tests/benchmarks/latest.json
      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: tests/benchmarks/latest.json
      - name: Generate benchmark comment
        run: |
          python - <<'PY'
import json
data=json.load(open('tests/benchmarks/latest.json'))
with open('bench.txt','w') as f:
    f.write(f"p95 runtime: {data['p95']:.4f}s\n")
    f.write(f"tokens used: {data['tokens']}\n")
PY
      - name: Comment benchmark
        if: ${{ github.event.pull_request }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: benchmark
          path: bench.txt
      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

  docker:
    name: "üê≥ Docker build"
    if: ${{ github.event.inputs.confirm == 'RUN' }}
    needs: tests
    runs-on: ubuntu-latest
    environment: ci-on-demand
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install pnpm
        run: npm install -g pnpm
      - name: Build web client
        run: |
          make build_web
          test -f src/interface/web_client/dist/index.html
      - name: Build image
        run: |
          docker build -t $DOCKER_IMAGE:ci \
            alpha_factory_v1/demos/alpha_agi_insight_v1/infrastructure
      - name: Smoke test image
        run: |
          docker run --rm -e RUN_MODE=cli $DOCKER_IMAGE:ci simulate --horizon 1 --offline
