name: "ðŸ”¥ Smoke Test"

on:
  workflow_dispatch:
    inputs:
      run_token:
        description: 'Authorization token for maintainers'
        required: false

permissions:
  contents: read

env:
  PYTHON_VERSION_MATRIX: "3.11,3.12,3.13"

jobs:
  smoke:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.11", "3.12", "3.13"]
    steps:
      - name: Check dispatch token
        if: github.actor != github.repository_owner
        run: |
          if [ "${{ github.event.inputs.run_token }}" != "${{ secrets.DISPATCH_TOKEN }}" ]; then
            echo "Unauthorized"
            exit 1
          fi
      - uses: actions/checkout@v4 # 11bd71901bbe5b1630ceea73d27597364c9af683
      - uses: actions/setup-python@v5 # a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: 'requirements.lock'

      - name: Cache pre-commit
        uses: actions/cache@v4.2.3 # 5a3ec84eff668545956fd18022155c47e93e2684
        with:
          path: .cache/pre-commit
          key: ${{ runner.os }}-precommit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-precommit-
      - name: Prepare build tools
        run: |
          python -m pip install --upgrade pip setuptools wheel
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.lock
          if [ "${{ matrix.python-version }}" = "3.11" ]; then
            pip install -r requirements-dev.txt
          fi
      - name: Install pre-commit
        if: matrix.python-version == '3.11'
        run: pip install pre-commit==4.2.0
        env:
          PRE_COMMIT_HOME: .cache/pre-commit
      - name: Run pre-commit checks
        if: matrix.python-version == '3.11'
        run: pre-commit run --all-files
        env:
          PRE_COMMIT_HOME: .cache/pre-commit
      - name: Run smoke tests
        if: matrix.python-version == '3.11'
        run: |
          pytest tests/test_ping_agent.py tests/test_af_requests.py \
            --cov --cov-report=xml --cov-fail-under=80
      - name: Upload coverage
        if: matrix.python-version == '3.11'
        uses: actions/upload-artifact@v4.6.2 # ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: coverage-xml-${{ matrix.python-version }}
          path: coverage.xml
      - name: Run 2-year simulation
        run: |
          python -m alpha_factory_v1.demos.alpha_agi_insight_v1.src.interface.cli simulate \
            --horizon 2 --sectors 1 --pop-size 1 --generations 1 --offline --no-broadcast \
            | tee sim.log
          grep -qi "year" sim.log
          test -f "$AGI_INSIGHT_LEDGER_PATH"
        env:
          AGI_INSIGHT_LEDGER_PATH: ${{ runner.temp }}/audit.db
          AGI_INSIGHT_OFFLINE: "1"
          OPENAI_API_KEY: ""

      - name: Verify ledger output
        run: |
          grep -qi year "$AGI_INSIGHT_LEDGER_PATH" || true
          sqlite3 "$AGI_INSIGHT_LEDGER_PATH" 'SELECT COUNT(*) FROM messages;' | grep -q "^[1-9]"
        env:
          AGI_INSIGHT_LEDGER_PATH: ${{ runner.temp }}/audit.db

