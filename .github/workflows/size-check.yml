name: "ðŸ“¦ Browser Size"

on:
  workflow_dispatch:
    inputs:
      run_token:
        description: 'Authorization token for maintainers'
        required: false

permissions:
  contents: read

jobs:
  build-and-check:
    runs-on: ubuntu-latest
    steps:
      - name: Check dispatch token
        if: github.actor != github.repository_owner
        run: |
          if [ "${{ github.event.inputs.run_token }}" != "${{ secrets.DISPATCH_TOKEN }}" ]; then
            echo "Unauthorized"
            exit 1
          fi
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: 'requirements.lock'
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          cache-dependency-path: alpha_factory_v1/demos/alpha_agi_insight_v1/insight_browser_v1/package-lock.json
      - name: Install pre-commit
        run: pip install pre-commit
      - name: Install required Python packages
        run: pip install numpy pandas pytest pyyaml
      - name: Run environment check
        run: ./scripts/env_check.sh
      - name: Run pre-commit checks
        run: pre-commit run --all-files
      - name: Install dependencies
        run: npm ci --prefix alpha_factory_v1/demos/alpha_agi_insight_v1/insight_browser_v1
      - name: Compute asset cache key
        id: asset-key
        run: |
          key=$(python - <<'PY'
            import hashlib, json, scripts.fetch_assets as fa
            env_data = json.dumps({'PYODIDE_BASE_URL': fa.PYODIDE_BASE_URL, 'HF_GPT2_BASE_URL': fa.HF_GPT2_BASE_URL})
            data = json.dumps(fa.CHECKSUMS, sort_keys=True) + env_data
            print('sha256-' + hashlib.sha256(data.encode()).hexdigest())
          PY
          )
          echo "key=$key" >> "$GITHUB_OUTPUT"
      - name: Cache Pyodide and GPT-2 assets
        uses: actions/cache@v3
        with:
          path: |
            alpha_factory_v1/demos/alpha_agi_insight_v1/insight_browser_v1/wasm
            alpha_factory_v1/demos/alpha_agi_insight_v1/insight_browser_v1/wasm_llm
          key: assets-${{ steps.asset-key.outputs.key }}
          restore-keys: assets-
      - name: Fetch Insight Browser assets
        run: python scripts/fetch_assets.py
      - name: Update browserslist database
        run: npx update-browserslist-db@latest --agree-to-terms
      - name: Verify Insight Browser assets
        run: python scripts/fetch_assets.py --verify-only
      - name: Build distribution zip
        run: npm run build:dist --prefix alpha_factory_v1/demos/alpha_agi_insight_v1/insight_browser_v1
      - name: Check archive size
        run: |
          size=$(stat -c%s alpha_factory_v1/demos/alpha_agi_insight_v1/insight_browser_v1/insight_browser.zip)
          echo "insight_browser.zip size: $size bytes"
          if [ "$size" -gt $((3 * 1024 * 1024)) ]; then
            echo "Archive exceeds 3 MiB" >&2
            exit 1
          fi
