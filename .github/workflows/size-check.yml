name: "ðŸ“¦ Browser Size"

on:
  workflow_dispatch:
    inputs:
      run_token:
        description: 'Authorization token for maintainers'
        required: false

permissions:
  contents: read

jobs:
  build-and-check:
    runs-on: ubuntu-latest
    steps:
      - name: Check dispatch token
        if: github.actor != github.repository_owner
        run: |
          if [ "${{ github.event.inputs.run_token }}" != "${{ secrets.DISPATCH_TOKEN }}" ]; then
            echo "Unauthorized"
            exit 1
          fi
      - uses: actions/checkout@v4 # 11bd71901bbe5b1630ceea73d27597364c9af683
      - uses: actions/setup-python@v5 # a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: '3.13'
          cache: 'pip'
          cache-dependency-path: 'requirements.lock'

      - name: Cache pre-commit
        uses: actions/cache@v4.2.3 # 5a3ec84eff668545956fd18022155c47e93e2684
        with:
          path: .cache/pre-commit
          key: ${{ runner.os }}-precommit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-precommit-
      - uses: actions/setup-node@v4 # 49933ea5288caeca8642d1e84afbd3f7d6820020
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          cache-dependency-path: |
            alpha_factory_v1/demos/alpha_agi_insight_v1/insight_browser_v1/package-lock.json
            alpha_factory_v1/core/interface/web_client/package-lock.json
      - name: Install pre-commit
        run: pip install pre-commit==4.2.0
        env:
          PRE_COMMIT_HOME: .cache/pre-commit
      - name: Install required Python packages
        run: pip install numpy pandas pytest pyyaml
      - name: Run environment check
        run: ./scripts/env_check.sh
      - name: Run pre-commit checks
        run: pre-commit run --all-files
        env:
          PRE_COMMIT_HOME: .cache/pre-commit
      - name: Install dependencies
        run: npm ci --prefix alpha_factory_v1/demos/alpha_agi_insight_v1/insight_browser_v1
      - uses: ./.github/actions/setup-insight-assets
      - name: Update browserslist database
        id: browserslist
        continue-on-error: true
        working-directory: alpha_factory_v1/demos/alpha_agi_insight_v1/insight_browser_v1
        run: npx update-browserslist-db --update-db --yes
      - name: Ignore stale browserslist data
        if: steps.browserslist.outcome == 'failure'
        run: |
          echo "::warning::Failed to update browserslist database"
          echo "BROWSERSLIST_IGNORE_OLD_DATA=true" >> "$GITHUB_ENV"
      - uses: ./.github/actions/setup-insight-assets
      - name: Build distribution zip
        run: npm run build:dist --prefix alpha_factory_v1/demos/alpha_agi_insight_v1/insight_browser_v1
      - name: Check archive size
        run: |
          size=$(stat -c%s alpha_factory_v1/demos/alpha_agi_insight_v1/insight_browser_v1/insight_browser.zip)
          echo "insight_browser.zip size: $size bytes"
          if [ "$size" -gt $((750 * 1024 * 1024)) ]; then
            echo "::error::Archive exceeds 750 MiB" >&2
            exit 1
          elif [ "$size" -gt $((500 * 1024 * 1024)) ]; then
            echo "::warning::Archive exceeds 500 MiB" >&2
          fi
