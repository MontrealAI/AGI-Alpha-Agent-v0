name: "ðŸŒ© Load Test"

on:
  workflow_dispatch:
    inputs:
      run_token:
        description: 'Authorization token for maintainers'
        required: false

permissions:
  contents: read

jobs:
  load-test:
    runs-on: ubuntu-latest
    steps:
      - name: Check dispatch token
        if: github.actor != github.repository_owner
        run: |
          if [ "${{ github.event.inputs.run_token }}" != "${{ secrets.DISPATCH_TOKEN }}" ]; then
            echo "Unauthorized"
            exit 1
          fi
      - uses: actions/checkout@v4 # 11bd71901bbe5b1630ceea73d27597364c9af683
      - uses: actions/setup-python@v5 # a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: '3.11'
          cache: pip
          cache-dependency-path: 'requirements.lock'

      - name: Cache pre-commit
        uses: actions/cache@v4.2.3 # 5a3ec84eff668545956fd18022155c47e93e2684
        with:
          path: .cache/pre-commit
          key: ${{ runner.os }}-precommit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-precommit-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.lock
          pip install -r requirements-dev.txt
      - name: Install pre-commit
        run: pip install pre-commit==4.2.0
        env:
          PRE_COMMIT_HOME: .cache/pre-commit
      - name: Run pre-commit checks
        run: |
          from_ref="${{ github.event.before }}"
          if [ -n "$from_ref" ]; then
            pre-commit run --from-ref "$from_ref" --to-ref "${{ github.sha }}"
          else
            pre-commit run --all-files
          fi
        env:
          PRE_COMMIT_HOME: .cache/pre-commit
      - name: Start API server
        run: |
          API_TOKEN=test-token python -m src.interface.api_server &
          pid=$!
          for _ in {1..50}; do
            curl -fs http://localhost:8000/healthz && break
            sleep 2
          done
          echo $pid > server.pid
      - name: Install k6
        run: sudo apt-get update && sudo apt-get install -y k6
      - name: Run load test
        run: |
          make loadtest API_TOKEN=test-token
      - name: Stop server
        run: kill "$(cat server.pid)"
