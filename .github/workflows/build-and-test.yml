name: "🐳 Build & Test"

# This workflow runs unit tests and builds the Docker image.
# It must be triggered manually via the "Run workflow" button and
# executes only when the GitHub actor matches the repository owner.

on:
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DOCKER_IMAGE: alpha-factory

jobs:
  build-test:
    # Ensure this job only runs from the manual "Run workflow" button
    # and only when triggered by the repository owner.
    if: github.event_name == 'workflow_dispatch' 
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: 'requirements.lock'

      # Docker requires lowercase repository names. Convert the repository
      # owner to lowercase so image tags remain valid even when the GitHub
      # organization uses capital letters.
      - name: Prepare lowercase image name
        id: prepare
        shell: bash
        run: echo "REPO_OWNER_LC=${GITHUB_REPOSITORY_OWNER,,}" >> "$GITHUB_ENV"

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            alpha_factory_v1/demos/alpha_agi_insight_v1/insight_browser_v1/package-lock.json
            alpha_factory_v1/core/interface/web_client/package-lock.json

      - name: Cache pre-commit
        uses: actions/cache@v4
        with:
          path: .cache/pre-commit
          key: ${{ runner.os }}-precommit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-precommit-

      - name: Install insight browser dependencies
        run: npm ci --prefix alpha_factory_v1/demos/alpha_agi_insight_v1/insight_browser_v1

      - name: Install pre-commit
        run: pip install pre-commit==4.2.0
        env:
          PRE_COMMIT_HOME: .cache/pre-commit
      - name: Run pre-commit checks
        run: pre-commit run --all-files
        env:
          PRE_COMMIT_HOME: .cache/pre-commit

      - name: Build Docker image
        run: |
          docker build --build-arg "PYTHON_VERSION=${{ matrix.python-version }}" \
            -t "ghcr.io/$REPO_OWNER_LC/$DOCKER_IMAGE:${{ github.sha }}" -f Dockerfile .
      - name: Compute Python tag
        shell: bash
        run: |
          tag=py${{ matrix.python-version }}
          tag=${tag//./}
          echo "PY_TAG=$tag" >> "$GITHUB_ENV"

      - name: Run pytest inside container
        run: |
          docker run --rm \
            -v "$PWD":/repo -w /repo \
            "ghcr.io/$REPO_OWNER_LC/$DOCKER_IMAGE:${{ github.sha }}" \
            bash -c "python check_env.py --auto-install${WHEELHOUSE:+ --wheelhouse \"$WHEELHOUSE\"} && pytest --cov --cov-report=xml:/repo/coverage.xml --cov-fail-under=80"

      - name: Upload coverage
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag and push image
        run: |
          docker tag "ghcr.io/$REPO_OWNER_LC/$DOCKER_IMAGE:${{ github.sha }}" \
            "ghcr.io/$REPO_OWNER_LC/$DOCKER_IMAGE:$PY_TAG"
          docker push "ghcr.io/$REPO_OWNER_LC/$DOCKER_IMAGE:${{ github.sha }}"
          docker push "ghcr.io/$REPO_OWNER_LC/$DOCKER_IMAGE:$PY_TAG"

      - name: Install cosign
        uses: sigstore/cosign-installer@v3.9.1
        with:
          cosign-release: 'v2.2.4'

      - name: Sign image
        run: |
          cosign sign --yes "ghcr.io/$REPO_OWNER_LC/$DOCKER_IMAGE:${{ github.sha }}"
          cosign sign --yes "ghcr.io/$REPO_OWNER_LC/$DOCKER_IMAGE:$PY_TAG"

      - name: Verify signature
        run: |
          cosign verify "ghcr.io/$REPO_OWNER_LC/$DOCKER_IMAGE:${{ github.sha }}"
          cosign verify "ghcr.io/$REPO_OWNER_LC/$DOCKER_IMAGE:$PY_TAG"

      - name: Tag and push latest image
        if: matrix.python-version == '3.12'
        run: |
          docker tag "ghcr.io/$REPO_OWNER_LC/$DOCKER_IMAGE:${{ github.sha }}" \
            "ghcr.io/$REPO_OWNER_LC/$DOCKER_IMAGE:latest"
          docker push "ghcr.io/$REPO_OWNER_LC/$DOCKER_IMAGE:latest"
          cosign sign --yes "ghcr.io/$REPO_OWNER_LC/$DOCKER_IMAGE:latest"
          cosign verify "ghcr.io/$REPO_OWNER_LC/$DOCKER_IMAGE:latest"
