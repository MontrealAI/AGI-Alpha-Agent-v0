name: "🐳 Build & Test"

# This workflow runs unit tests and builds the Docker image.
# It must be triggered manually via the "Run workflow" button and
# executes only when the GitHub actor matches the repository owner.

on:
  workflow_dispatch:

permissions:
  contents: read
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DOCKER_IMAGE: alpha-factory

jobs:
  build-test:
    if: github.actor == github.repository_owner
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      # Docker requires lowercase repository names. Convert the repository
      # owner to lowercase so image tags remain valid even when the GitHub
      # organization uses capital letters.
      - name: Compute repo_owner_lower
        shell: bash
        run: echo "repo_owner_lower=${GITHUB_REPOSITORY_OWNER,,}" >> "$GITHUB_ENV"

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: alpha_factory_v1/demos/alpha_agi_insight_v1/insight_browser_v1/package-lock.json

      - name: Cache pre-commit
        uses: actions/cache@v4
        with:
          path: .cache/pre-commit
          key: ${{ runner.os }}-precommit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-precommit-

      - name: Install insight browser dependencies
        run: npm ci --prefix alpha_factory_v1/demos/alpha_agi_insight_v1/insight_browser_v1

      - name: Install pre-commit
        run: pip install pre-commit==4.2.0
        env:
          PRE_COMMIT_HOME: .cache/pre-commit
      - name: Run pre-commit checks
        run: pre-commit run --all-files
        env:
          PRE_COMMIT_HOME: .cache/pre-commit

      - name: Build Docker image
        run: |
          docker build --build-arg PYTHON_VERSION=${{ matrix.python-version }} \
            -t ghcr.io/$repo_owner_lower/$DOCKER_IMAGE:${{ github.sha }} -f Dockerfile .

      - name: Run pytest inside container
        run: |
          docker run --rm \
            -v "$PWD":/repo -w /repo \
            ghcr.io/$repo_owner_lower/$DOCKER_IMAGE:${{ github.sha }} \
            bash -c "python check_env.py --auto-install${WHEELHOUSE:+ --wheelhouse \"$WHEELHOUSE\"} && pytest --cov --cov-report=xml:/repo/coverage.xml --cov-fail-under=80"

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

      - name: Login to GHCR
        if: matrix.python-version == '3.12'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image
        if: matrix.python-version == '3.12'
        run: |
          docker push ghcr.io/$repo_owner_lower/$DOCKER_IMAGE:${{ github.sha }}

      - name: Install cosign
        uses: sigstore/cosign-installer@v3.9.1
        with:
          cosign-release: 'v2.2.4'

      - name: Sign image
        if: matrix.python-version == '3.12'
        run: |
          cosign sign --yes ghcr.io/$repo_owner_lower/$DOCKER_IMAGE:${{ github.sha }}

      - name: Verify signature
        if: matrix.python-version == '3.12'
        run: |
          cosign verify ghcr.io/$repo_owner_lower/$DOCKER_IMAGE:${{ github.sha }}

      - name: Tag latest image
        if: matrix.python-version == '3.12'
        run: |
          docker tag ghcr.io/$repo_owner_lower/$DOCKER_IMAGE:${{ github.sha }} \
            ghcr.io/$repo_owner_lower/$DOCKER_IMAGE:latest

      - name: Push latest tag
        if: matrix.python-version == '3.12'
        run: docker push ghcr.io/$repo_owner_lower/$DOCKER_IMAGE:latest
