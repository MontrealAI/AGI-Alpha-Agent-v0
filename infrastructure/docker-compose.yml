version: '3.9'
services:
  orchestrator:
    build:
      context: ..                        # project root as build context
      dockerfile: infrastructure/Dockerfile # container recipe
    image: alpha-demo:latest             # demo image tag
    env_file:
      - ../.env                          # default environment variables
    environment:
      RUN_MODE: api                           # container start mode
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}     # hosted model credential
      AGI_INSIGHT_OFFLINE: ${AGI_INSIGHT_OFFLINE:-0} # set 1 for local models
      AGI_INSIGHT_BUS_PORT: ${AGI_INSIGHT_BUS_PORT:-6006} # gRPC event bus port
      AGI_INSIGHT_LEDGER_PATH: ${AGI_INSIGHT_LEDGER_PATH:-./ledger/audit.db} # audit ledger path
    ports:
      - "${PORT:-8000}:8000"                 # host:container REST API port
      - "${AGI_INSIGHT_BUS_PORT:-6006}:6006" # host:container gRPC bus
    restart: unless-stopped              # restart policy

  agents:
    image: alpha-demo:latest             # reuse the demo image
    env_file:
      - ../.env                          # default environment variables
    environment:
      RUN_MODE: cli                           # entrypoint for agent workers
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}     # hosted model credential
      AGI_INSIGHT_OFFLINE: ${AGI_INSIGHT_OFFLINE:-0} # set 1 for local models
      AGI_INSIGHT_BUS_PORT: ${AGI_INSIGHT_BUS_PORT:-6006} # gRPC event bus port
      AGI_INSIGHT_LEDGER_PATH: ${AGI_INSIGHT_LEDGER_PATH:-./ledger/audit.db} # audit ledger path
    depends_on:
      - orchestrator                     # wait for orchestrator

  web:
    image: alpha-demo:latest             # reuse the demo image
    env_file:
      - ../.env                          # default environment variables
    environment:
      RUN_MODE: web                           # start the Streamlit dashboard
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}     # hosted model credential
      AGI_INSIGHT_OFFLINE: ${AGI_INSIGHT_OFFLINE:-0} # set 1 for local models
    ports:
      - "8501:8501"                           # host:container dashboard port
    depends_on:
      - orchestrator                     # wait for orchestrator
