# --------------------------------------------------------------------------
# Alpha‑Factory multi‑stage reproducible build (CPU & GPU variants)
# --------------------------------------------------------------------------
ARG PYTHON_VERSION=3.11
ARG BASE_IMAGE=python:${PYTHON_VERSION}-slim

# ==================== builder stage =======================================
FROM ${BASE_IMAGE} AS builder

# hadolint ignore=DL3008
RUN apt-get update && apt-get install -y --no-install-recommends \
        build-essential git curl && \
    rm -rf /var/lib/apt/lists/*

# Copy lock‑file + project metadata for deterministic install
WORKDIR /install
COPY backend/pyproject.toml backend/poetry.lock ./backend/
COPY requirements.lock ./

# --- install deps into /install/venv --------------------------------------
RUN pip install --no-cache-dir pip==24.0 setuptools wheel && \
    pip install --no-cache-dir -r requirements.lock --require-hashes && \
    python -m compileall -q $(python - <<EOF
import sys, site, pathlib, json, os, sysconfig, textwrap
print('\n'.join(site.getsitepackages()))
EOF
)

# Copy source AFTER deps to leverage Docker layer cache
WORKDIR /app
COPY backend/ ./backend/
COPY ui/ ./ui/
COPY entrypoint.sh ./
RUN chmod +x entrypoint.sh

# ==================== CPU runtime =========================================
FROM python:${PYTHON_VERSION}-slim AS runtime-cpu
LABEL org.opencontainers.image.title="Alpha‑Factory CPU"
ENV PYTHONUNBUFFERED=1 PYTHONDONTWRITEBYTECODE=1 \
    ALPHA_VARIANT=cpu

# copy wheels/site‑packages
COPY --from=builder /usr/local /usr/local
COPY --from=builder /app /app
WORKDIR /app
EXPOSE 8000
CMD ["./entrypoint.sh"]

# ==================== GPU runtime =========================================
ARG CUDA_TAG=12.4.0-runtime-ubuntu22.04
FROM nvidia/cuda:${CUDA_TAG} AS runtime-gpu
LABEL org.opencontainers.image.title="Alpha‑Factory GPU"
ENV PYTHONUNBUFFERED=1 PYTHONDONTWRITEBYTECODE=1 \
    ALPHA_VARIANT=gpu

# minimally install python
RUN apt-get update && apt-get install -y --no-install-recommends python3 python3-pip && \
    ln -sf python3 /usr/bin/python && rm -rf /var/lib/apt/lists/*

COPY --from=builder /usr/local /usr/local
COPY --from=builder /app /app
WORKDIR /app
EXPOSE 8000
CMD ["./entrypoint.sh"]
